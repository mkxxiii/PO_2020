@model AnimeList.Models.Diretor

@{
    ViewBag.Title = "Edit";
}

@{
    if (Model.Id == 0)
    {
        <h2>Criar</h2>
    }
    else
    {
        <h2>Editar</h2>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Diretor</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date", value = Model.DataNascimento?.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @{
            var listItems = new List<SelectListItem>();
            listItems.Add(new SelectListItem
            {
                Text = "Não Informado / Desconhecido",
                Value = "",
                Selected = string.IsNullOrWhiteSpace(Model.Sexo)
            });
            listItems.Add(new SelectListItem
            {
                Text = "Feminino",
                Value = "F",
                Selected = Model.Sexo == "F" || Model.Sexo == "f"
            });
            listItems.Add(new SelectListItem
            {
                Text = "Masculino",
                Value = "M",
                Selected = Model.Sexo == "M" || Model.Sexo == "m"
            });
        }

        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Sexo, listItems, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success btn-xs">Salvar</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Retornar a Listagem", "Index", "Diretor")
</div>